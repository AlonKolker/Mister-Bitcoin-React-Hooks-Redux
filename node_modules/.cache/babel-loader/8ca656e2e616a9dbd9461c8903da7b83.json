{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Desktop\\\\Mister-bitcoin -React day 106\\\\Mister Bitcoin-React-with-hooks-and-redux\\\\src\\\\pages\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { HashRouter as Router, Link } from \"react-router-dom\";\nimport { contactService } from \"../services/contactService\";\nimport { ContactList } from \"../components/Contact-list\";\nimport { ContactDeatails } from \"../pages/Contact-details\";\nimport { ContactFilter } from \"../components/Contact-filter\";\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadContacts, removeContact, setFilterBy } from '../store/actions/contactActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contact = () => {\n  _s();\n\n  // state = {\n  //   contacts: null,\n  //   contactId: null,\n  //   filterBy: null,\n  // }\n  const contacts = useSelector(state => state.contactModule.contacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadContacts());\n  }, [dispatch]); // componentDidMount() {\n  //   this.loaContacts()\n  // }\n  // async loaContacts() {\n  //   try {\n  //     const contacts = await contactService.getContacts(this.state.filterBy)\n  //     this.setState({ contacts })\n  //   } catch (err) {\n  //     console.log(\"err:\", err)\n  //   }\n  // }\n\n  const onChangeFilter = useCallback(filterBy => {\n    console.log(filterBy);\n    dispatch(setFilterBy(filterBy));\n    dispatch(loadContacts());\n  }, [dispatch]); // onChangeFilter = (filterBy) => {\n  //   this.setState({ filterBy }, this.loaContacts)\n  // }\n\n  if (!contacts) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 27\n  }, this); // if (contactId) return <ContactDeatails contactId={contactId}  />\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts-conteiner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-options-box  flex\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"add-new-contact-btn\",\n        to: \"/contact/edit\",\n        children: \"New Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContactFilter, {\n        onChangeFilter: onChangeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}; // export class Contact extends Component {\n//   state = {\n//     contacts: null,\n//     contactId: null,\n//     filterBy: null,\n//   }\n//   componentDidMount() {\n//     this.loaContacts()\n//   }\n//   async loaContacts() {\n//     try {\n//       const contacts = await contactService.getContacts(this.state.filterBy)\n//       this.setState({ contacts })\n//     } catch (err) {\n//       console.log(\"err:\", err)\n//     }\n//   }\n//   onChangeFilter = (filterBy) => {\n//     this.setState({ filterBy }, this.loaContacts)\n//   }\n//   render() {\n//     const { contacts, contactId, currContact } = this.state\n//     if (!contacts) return <span>Loading</span>\n//     if (contactId) return <ContactDeatails contactId={contactId} onShowDeatails={this.onShowDeatails} />\n//     return (\n//       <div className='contacts-conteiner'>\n//         <div className=\"contact-options-box  flex\">\n//           <Link className='add-new-contact-btn' to='/contact/edit'>\n//             New Contact\n//           </Link>\n//           <ContactFilter onChangeFilter={this.onChangeFilter} />\n//         </div>\n//         <ContactList contacts={contacts} onShowDeatails={this.onShowDeatails} />\n//       </div>\n//     )\n//   }\n// }\n\n_s(Contact, \"10trgcLGI3Oudlo3BOLHz4UpKfc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","Component","HashRouter","Router","Link","contactService","ContactList","ContactDeatails","ContactFilter","useCallback","useEffect","useDispatch","useSelector","loadContacts","removeContact","setFilterBy","Contact","contacts","state","contactModule","dispatch","onChangeFilter","filterBy","console","log"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/pages/Contact.jsx"],"sourcesContent":["import React, { Component } from \"react\"\r\nimport { HashRouter as Router, Link } from \"react-router-dom\"\r\nimport { contactService } from \"../services/contactService\"\r\nimport { ContactList } from \"../components/Contact-list\"\r\nimport { ContactDeatails } from \"../pages/Contact-details\"\r\nimport { ContactFilter } from \"../components/Contact-filter\"\r\n\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadContacts, removeContact, setFilterBy } from '../store/actions/contactActions'\r\n\r\nexport const Contact = ()=> {\r\n  // state = {\r\n  //   contacts: null,\r\n  //   contactId: null,\r\n  //   filterBy: null,\r\n  // }\r\n  const contacts = useSelector((state) => state.contactModule.contacts)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(loadContacts())\r\n  }, [dispatch])\r\n  // componentDidMount() {\r\n  //   this.loaContacts()\r\n  // }\r\n  // async loaContacts() {\r\n  //   try {\r\n  //     const contacts = await contactService.getContacts(this.state.filterBy)\r\n  //     this.setState({ contacts })\r\n  //   } catch (err) {\r\n  //     console.log(\"err:\", err)\r\n  //   }\r\n  // }\r\n\r\n  const onChangeFilter = useCallback(\r\n    (filterBy) => {\r\n      console.log(filterBy);\r\n      dispatch(setFilterBy(filterBy))\r\n      dispatch(loadContacts())\r\n    },\r\n    [dispatch]\r\n  )\r\n  // onChangeFilter = (filterBy) => {\r\n  //   this.setState({ filterBy }, this.loaContacts)\r\n  // }\r\n\r\n    if (!contacts) return <span>Loading</span>\r\n    // if (contactId) return <ContactDeatails contactId={contactId}  />\r\n    return (\r\n      <div className='contacts-conteiner'>\r\n        <div className=\"contact-options-box  flex\">\r\n          <Link className='add-new-contact-btn' to='/contact/edit'>\r\n            New Contact\r\n          </Link>\r\n          <ContactFilter onChangeFilter={onChangeFilter} />\r\n        </div>\r\n        <ContactList contacts={contacts}  />\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\n// export class Contact extends Component {\r\n//   state = {\r\n//     contacts: null,\r\n//     contactId: null,\r\n//     filterBy: null,\r\n//   }\r\n//   componentDidMount() {\r\n//     this.loaContacts()\r\n//   }\r\n//   async loaContacts() {\r\n//     try {\r\n//       const contacts = await contactService.getContacts(this.state.filterBy)\r\n//       this.setState({ contacts })\r\n//     } catch (err) {\r\n//       console.log(\"err:\", err)\r\n//     }\r\n//   }\r\n\r\n//   onChangeFilter = (filterBy) => {\r\n//     this.setState({ filterBy }, this.loaContacts)\r\n//   }\r\n\r\n//   render() {\r\n//     const { contacts, contactId, currContact } = this.state\r\n//     if (!contacts) return <span>Loading</span>\r\n//     if (contactId) return <ContactDeatails contactId={contactId} onShowDeatails={this.onShowDeatails} />\r\n//     return (\r\n//       <div className='contacts-conteiner'>\r\n//         <div className=\"contact-options-box  flex\">\r\n//           <Link className='add-new-contact-btn' to='/contact/edit'>\r\n//             New Contact\r\n//           </Link>\r\n//           <ContactFilter onChangeFilter={this.onChangeFilter} />\r\n//         </div>\r\n//         <ContactList contacts={contacts} onShowDeatails={this.onShowDeatails} />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,IAA/B,QAA2C,kBAA3C;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,QAAyD,iCAAzD;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAK;EAAA;;EAC1B;EACA;EACA;EACA;EACA;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBF,QAAhC,CAA5B;EACA,MAAMG,QAAQ,GAAGT,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,YAAY,EAAb,CAAR;EACD,CAFQ,EAEN,CAACO,QAAD,CAFM,CAAT,CAT0B,CAY1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,cAAc,GAAGZ,WAAW,CAC/Ba,QAAD,IAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,QAAZ;IACAF,QAAQ,CAACL,WAAW,CAACO,QAAD,CAAZ,CAAR;IACAF,QAAQ,CAACP,YAAY,EAAb,CAAR;EACD,CAL+B,EAMhC,CAACO,QAAD,CANgC,CAAlC,CAxB0B,CAgC1B;EACA;EACA;;EAEE,IAAI,CAACH,QAAL,EAAe,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CApCS,CAqCxB;;EACA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,2BAAf;MAAA,wBACE,QAAC,IAAD;QAAM,SAAS,EAAC,qBAAhB;QAAsC,EAAE,EAAC,eAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,aAAD;QAAe,cAAc,EAAEI;MAA/B;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,WAAD;MAAa,QAAQ,EAAEJ;IAAvB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYH,CAlDM,C,CAoDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA1FaD,O;UAMMJ,W,EACAD,W;;;KAPNK,O"},"metadata":{},"sourceType":"module"}