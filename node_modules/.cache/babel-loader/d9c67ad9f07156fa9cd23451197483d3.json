{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Desktop\\\\Mister-bitcoin -React day 106\\\\Mister Bitcoin-React-with-hooks-and-redux\\\\src\\\\pages\\\\Contact-Edit.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, createRef } from \"react\";\nimport { contactService } from \"../services/contactService\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from '../customHooks/useForm';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactEdit = () => {\n  _s();\n\n  // state = {\n  //   contact: null,\n  // }\n  const [contact, handleChange, setContact] = useForm();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    loadContact();\n  }, [loadContact]);\n  const loadContact = useCallback(async () => {\n    const contactId = params.id;\n    const contact = contactId ? await contactService.getContactById(contactId) : contactService.getEmptyContact();\n    setContact(contact);\n  }, [params.id, setContact]); // async componentDidMount() {\n  //   console.log(\"edit componentDidMount\")\n  //   const contactId = this.props.match.params.id\n  //   const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\n  //   this.setState({ contact })\n  //  }\n  // const handleChange = ({ target }) => {\n  //   const field = target.name\n  //   const value = target.type === \"number\" ? +target.value || \"\" : target.value\n  //   this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\n  //   console.log(this.state.contact);\n  // }\n\n  const onSaveContact = async ev => {\n    ev.preventDefault();\n    const {\n      name,\n      phone,\n      email\n    } = ev.target.elements;\n    if (name.value === '' || phone.value === '' || email.value === '') return;\n    dispatch(saveContact(contact));\n    history.push(\"/contact\");\n  }; // const onSaveContact = async (ev) => {\n  //   ev.preventDefault()\n  //   // console.log(...this.state.contact );\n  //   await contactService.saveContact({ ...this.state.contact })\n  //   this.props.history.push(\"/contact\")\n  // }\n\n\n  inputRefFunc = elInput => {\n    elInput && elInput.focus();\n  };\n\n  if (!contact) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading contact edit...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"contact-edit-conteiner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [contact._id ? \"Edit\" : \"Add\", \" contact\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSaveContact,\n        className: \"edit-contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          ref: this.inputRefFunc,\n          value: contact.name,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"name\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          ref: this.inputRefFunc,\n          value: contact.phone,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"phone\",\n          id: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          ref: this.inputRefFunc,\n          value: contact.email,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nice-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nice-button\",\n            onClick: this.props.history.goBack,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}; // export class ContactEdit extends Component {\n//   state = {\n//     contact: null,\n//   }\n//   async componentDidMount() {\n//     console.log(\"edit componentDidMount\")\n//     const contactId = this.props.match.params.id\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\n//     this.setState({ contact })\n//   }\n//   handleChange = ({ target }) => {\n//     const field = target.name\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\n//     console.log(this.state.contact);\n//   }\n//   onSaveContact = async (ev) => {\n//     ev.preventDefault()\n//     // console.log(...this.state.contact );\n//     await contactService.saveContact({ ...this.state.contact })\n//     this.props.history.push(\"/contact\")\n//   }\n//   inputRefFunc = (elInput) => {\n//     elInput && elInput.focus()\n//   }\n//   render() {\n//     const { contact } = this.state\n//     console.log(contact)\n//     if (!contact) return <div>Loading contact edit...</div>\n//     return (\n//       <section className='contact-edit-conteiner'>\n//         <div className='contact-edit'>\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\n//           <label htmlFor='name'>Name</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\n//           <label htmlFor='phone'>Phone</label>\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\n//           <label htmlFor='email'>Email</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\n//         <div className=\"flex\">\n//           <button className=\"nice-button\">Save</button>\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\n//         </div>\n//         </form>\n//         </div>\n//       </section>\n//     )\n//   }\n// }\n\n_s(ContactEdit, \"LErsTl4Z9J9V/L8nV8LQnKGGEas=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = ContactEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactEdit\");","map":{"version":3,"names":["Component","createRef","contactService","useHistory","useParams","useForm","useEffect","useCallback","useDispatch","ContactEdit","contact","handleChange","setContact","dispatch","loadContact","contactId","params","id","getContactById","getEmptyContact","onSaveContact","ev","preventDefault","name","phone","email","target","elements","value","saveContact","history","push","inputRefFunc","elInput","focus","_id","props","goBack"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/pages/Contact-Edit.jsx"],"sourcesContent":["import { Component, createRef } from \"react\"\r\nimport { contactService } from \"../services/contactService\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { useForm } from '../customHooks/useForm'\r\nimport { useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const ContactEdit = ()=> {\r\n  // state = {\r\n  //   contact: null,\r\n  // }\r\n  const [contact, handleChange, setContact] = useForm()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    loadContact()\r\n  }, [loadContact])\r\n\r\n\r\n  const loadContact = useCallback(async () => {\r\n    const contactId = params.id\r\n    const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\r\n    setContact(contact)\r\n  }, [params.id, setContact])\r\n\r\n\r\n  // async componentDidMount() {\r\n  //   console.log(\"edit componentDidMount\")\r\n  //   const contactId = this.props.match.params.id\r\n  //   const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\r\n  //   this.setState({ contact })\r\n  //  }\r\n\r\n  // const handleChange = ({ target }) => {\r\n  //   const field = target.name\r\n  //   const value = target.type === \"number\" ? +target.value || \"\" : target.value\r\n  //   this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\r\n  //   console.log(this.state.contact);\r\n  // }\r\n  const onSaveContact = async (ev) => {\r\n    ev.preventDefault()\r\n    const { name, phone, email } = ev.target.elements\r\n    if (name.value === '' || phone.value === '' || email.value === '') return\r\n    dispatch(saveContact(contact))\r\n    history.push(\"/contact\")\r\n  }\r\n  // const onSaveContact = async (ev) => {\r\n  //   ev.preventDefault()\r\n  //   // console.log(...this.state.contact );\r\n  //   await contactService.saveContact({ ...this.state.contact })\r\n  //   this.props.history.push(\"/contact\")\r\n  // }\r\n\r\n  inputRefFunc = (elInput) => {\r\n    elInput && elInput.focus()\r\n  }\r\n\r\n    if (!contact) return <div>Loading contact edit...</div>\r\n    return (\r\n      <section className='contact-edit-conteiner'>\r\n        <div className='contact-edit'>\r\n        <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n        <form onSubmit={onSaveContact} className=\"edit-contact-form\">\r\n          <label htmlFor='name'>Name</label>\r\n          <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={handleChange} type='text' name='name' id='name' />\r\n          <label htmlFor='phone'>Phone</label>\r\n          <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={handleChange} type='text' name='phone' id='phone' />\r\n          <label htmlFor='email'>Email</label>\r\n          <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={handleChange} type='text' name='email' id='email' />\r\n        <div className=\"flex\">\r\n          <button className=\"nice-button\">Save</button>\r\n        <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\r\n        </div>\r\n        </form>\r\n        </div>\r\n      </section>\r\n    )\r\n  \r\n}\r\n\r\n\r\n// export class ContactEdit extends Component {\r\n//   state = {\r\n//     contact: null,\r\n//   }\r\n\r\n\r\n//   async componentDidMount() {\r\n//     console.log(\"edit componentDidMount\")\r\n//     const contactId = this.props.match.params.id\r\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\r\n//     this.setState({ contact })\r\n \r\n//   }\r\n\r\n//   handleChange = ({ target }) => {\r\n//     const field = target.name\r\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\r\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\r\n//     console.log(this.state.contact);\r\n//   }\r\n\r\n//   onSaveContact = async (ev) => {\r\n//     ev.preventDefault()\r\n//     // console.log(...this.state.contact );\r\n//     await contactService.saveContact({ ...this.state.contact })\r\n//     this.props.history.push(\"/contact\")\r\n//   }\r\n\r\n//   inputRefFunc = (elInput) => {\r\n//     elInput && elInput.focus()\r\n//   }\r\n\r\n//   render() {\r\n//     const { contact } = this.state\r\n//     console.log(contact)\r\n//     if (!contact) return <div>Loading contact edit...</div>\r\n//     return (\r\n//       <section className='contact-edit-conteiner'>\r\n//         <div className='contact-edit'>\r\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\r\n//           <label htmlFor='name'>Name</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\r\n//           <label htmlFor='phone'>Phone</label>\r\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\r\n//           <label htmlFor='email'>Email</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\r\n//         <div className=\"flex\">\r\n//           <button className=\"nice-button\">Save</button>\r\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\r\n//         </div>\r\n//         </form>\r\n//         </div>\r\n//       </section>\r\n//     )\r\n//   }\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}