{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALON\\\\Desktop\\\\Mister-bitcoin -React day 106\\\\Mister Bitcoin-React-with-hooks-and-redux\\\\src\\\\pages\\\\Contact-Edit.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { saveContact } from \"../store/actions/contactActions\";\nimport { useForm } from \"../customHooks/useForm\";\nimport { contactService } from \"../services/contactService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactEdit = () => {\n  _s();\n\n  const [contact, handleChange, setContact] = useForm();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loadContact = useCallback(async () => {\n    const contactId = params.id;\n    const contact = contactId ? await contactService.getContactById(contactId) : contactService.getEmptyContact();\n    setContact(contact);\n  }, [params.id, setContact]);\n  useEffect(() => {\n    loadContact();\n  }, [loadContact]);\n\n  const onSaveContact = async ev => {\n    ev.preventDefault();\n    const {\n      name,\n      phone,\n      email\n    } = ev.target.elements;\n    if (name.value === \"\" || phone.value === \"\" || email.value === \"\") return;\n    dispatch(saveContact(contact));\n    navigate(\"/contact\");\n  };\n\n  const onBack = () => {\n    navigate(\"/contact\");\n  };\n\n  if (!contact) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading contact edit...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"contact-edit-conteiner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [contact._id ? \"Edit\" : \"Add\", \" contact\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSaveContact,\n        className: \"edit-contact-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          value: contact.name,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"name\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          value: contact.phone,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"phone\",\n          id: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-input\",\n          value: contact.email,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nice-button\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nice-button\",\n            onClick: onBack,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // export class ContactEdit extends Component {\n//   state = {\n//     contact: null,\n//   }\n//   async componentDidMount() {\n//     console.log(\"edit componentDidMount\")\n//     const contactId = this.props.match.params.id\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\n//     this.setState({ contact })\n//   }\n//   handleChange = ({ target }) => {\n//     const field = target.name\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\n//     console.log(this.state.contact);\n//   }\n//   onSaveContact = async (ev) => {\n//     ev.preventDefault()\n//     // console.log(...this.state.contact );\n//     await contactService.saveContact({ ...this.state.contact })\n//     this.props.history.push(\"/contact\")\n//   }\n//   inputRefFunc = (elInput) => {\n//     elInput && elInput.focus()\n//   }\n//   render() {\n//     const { contact } = this.state\n//     console.log(contact)\n//     if (!contact) return <div>Loading contact edit...</div>\n//     return (\n//       <section className='contact-edit-conteiner'>\n//         <div className='contact-edit'>\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\n//           <label htmlFor='name'>Name</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\n//           <label htmlFor='phone'>Phone</label>\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\n//           <label htmlFor='email'>Email</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\n//         <div className=\"flex\">\n//           <button className=\"nice-button\">Save</button>\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\n//         </div>\n//         </form>\n//         </div>\n//       </section>\n//     )\n//   }\n// }\n\n_s(ContactEdit, \"Th42g27m8xZavuLCkd9ket5/7UQ=\", false, function () {\n  return [useForm, useParams, useDispatch, useNavigate];\n});\n\n_c = ContactEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactEdit\");","map":{"version":3,"names":["useEffect","useCallback","useDispatch","useNavigate","useParams","saveContact","useForm","contactService","ContactEdit","contact","handleChange","setContact","params","dispatch","navigate","loadContact","contactId","id","getContactById","getEmptyContact","onSaveContact","ev","preventDefault","name","phone","email","target","elements","value","onBack","_id"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/pages/Contact-Edit.jsx"],"sourcesContent":["import { useEffect, useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { saveContact } from \"../store/actions/contactActions\"\r\nimport { useForm } from \"../customHooks/useForm\"\r\nimport { contactService } from \"../services/contactService\"\r\n\r\nexport const ContactEdit = () => {\r\n  const [contact, handleChange, setContact] = useForm()\r\n  const params = useParams()\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const loadContact = useCallback(async () => {\r\n    const contactId = params.id\r\n    const contact = contactId ? await contactService.getContactById(contactId) : contactService.getEmptyContact()\r\n    setContact(contact)\r\n  }, [params.id, setContact])\r\n\r\n  useEffect(() => {\r\n    loadContact()\r\n  }, [loadContact])\r\n\r\n  const onSaveContact = async (ev) => {\r\n    ev.preventDefault()\r\n    const { name, phone, email } = ev.target.elements\r\n    if (name.value === \"\" || phone.value === \"\" || email.value === \"\") return\r\n    dispatch(saveContact(contact))\r\n    navigate(\"/contact\")\r\n  }\r\n\r\n  const onBack = () => {\r\n    navigate(\"/contact\")\r\n  }\r\n\r\n  if (!contact) return <div>Loading contact edit...</div>\r\n  return (\r\n    <section className='contact-edit-conteiner'>\r\n      <div className='contact-edit'>\r\n        <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n        <form onSubmit={onSaveContact} className='edit-contact-form'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input className='edit-input' value={contact.name} onChange={handleChange} type='text' name='name' id='name' />\r\n          <label htmlFor='phone'>Phone</label>\r\n          <input className='edit-input' value={contact.phone} onChange={handleChange} type='text' name='phone' id='phone' />\r\n          <label htmlFor='email'>Email</label>\r\n          <input className='edit-input' value={contact.email} onChange={handleChange} type='text' name='email' id='email' />\r\n          <div className='flex'>\r\n            <button className='nice-button'>Save</button>\r\n            <button className='nice-button' onClick={onBack}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n// export class ContactEdit extends Component {\r\n//   state = {\r\n//     contact: null,\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     console.log(\"edit componentDidMount\")\r\n//     const contactId = this.props.match.params.id\r\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\r\n//     this.setState({ contact })\r\n\r\n//   }\r\n\r\n//   handleChange = ({ target }) => {\r\n//     const field = target.name\r\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\r\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\r\n//     console.log(this.state.contact);\r\n//   }\r\n\r\n//   onSaveContact = async (ev) => {\r\n//     ev.preventDefault()\r\n//     // console.log(...this.state.contact );\r\n//     await contactService.saveContact({ ...this.state.contact })\r\n//     this.props.history.push(\"/contact\")\r\n//   }\r\n\r\n//   inputRefFunc = (elInput) => {\r\n//     elInput && elInput.focus()\r\n//   }\r\n\r\n//   render() {\r\n//     const { contact } = this.state\r\n//     console.log(contact)\r\n//     if (!contact) return <div>Loading contact edit...</div>\r\n//     return (\r\n//       <section className='contact-edit-conteiner'>\r\n//         <div className='contact-edit'>\r\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\r\n//           <label htmlFor='name'>Name</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\r\n//           <label htmlFor='phone'>Phone</label>\r\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\r\n//           <label htmlFor='email'>Email</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\r\n//         <div className=\"flex\">\r\n//           <button className=\"nice-button\">Save</button>\r\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\r\n//         </div>\r\n//         </form>\r\n//         </div>\r\n//       </section>\r\n//     )\r\n//   }\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}