{"ast":null,"code":"import { bitCoinService } from \"../../services/bitcoin.Service\";\nimport { userService } from \"../../services/user.Service\";\nexport function loadUser() {\n  return (dispatch, getState) => {\n    try {\n      const user = userService.getUser();\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n    } catch (err) {\n      console.log('Cannot load user', err);\n      throw err;\n    }\n  };\n}\nexport function getUserMoves() {\n  return async (dispatch, getState) => {\n    try {\n      const userMoves = await userService.getUser().moves;\n      dispatch({\n        type: 'SET_USER_MOVES',\n        userMoves\n      });\n    } catch (err) {\n      console.log('Cannot get user moves', err);\n      throw err;\n    }\n  };\n}\nexport function getUserRate() {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        user\n      } = getState().userModule;\n      const userRate = await bitCoinService.getRate(user.coins);\n      dispatch({\n        type: 'SET_USER_RATE',\n        userRate\n      });\n    } catch (err) {\n      console.log('Cannot get user rate', err);\n      throw err;\n    }\n  };\n}\nexport function addUserMove(contact, coins) {\n  return async (dispatch, getState) => {\n    try {\n      const userMove = await userService.addMove(contact, +coins);\n      dispatch({\n        type: 'SET_USER',\n        userMove\n      });\n    } catch (err) {\n      console.log('Cannot add user move', err);\n      throw err;\n    }\n  };\n}\nexport function signup(contactName) {\n  return async (dispatch, getState) => {\n    try {\n      const user = await userService.signup(contactName);\n      dispatch({\n        type: 'SET_USER',\n        user\n      });\n    } catch (err) {\n      console.log('Cannot sign up', err);\n      throw err;\n    }\n  };\n}","map":{"version":3,"names":["bitCoinService","userService","loadUser","dispatch","getState","user","getUser","type","err","console","log","getUserMoves","userMoves","moves","getUserRate","userModule","userRate","getRate","coins","addUserMove","contact","userMove","addMove","signup","contactName"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/store/actions/userActions.js"],"sourcesContent":["import { bitCoinService } from \"../../services/bitcoin.Service\";\nimport { userService } from \"../../services/user.Service\";\n\nexport function loadUser() {\n    return (dispatch, getState) => {\n        try {\n            const user = userService.getUser()\n            dispatch({ type: 'SET_USER', user })\n        } catch (err) {\n            console.log('Cannot load user', err)\n            throw err\n        }\n    }\n}\n\nexport function getUserMoves() {\n    return async (dispatch, getState) => {\n        try {\n            const userMoves = await userService.getUser().moves\n            dispatch({ type: 'SET_USER_MOVES', userMoves })\n        } catch (err) {\n            console.log('Cannot get user moves', err);\n            throw err\n        }\n    }\n}\n\n\nexport function getUserRate() {\n    return async (dispatch, getState) => {\n        try {\n            const { user } = getState().userModule\n            const userRate = await bitCoinService.getRate(user.coins)\n            dispatch({ type: 'SET_USER_RATE', userRate })\n        } catch (err) {\n            console.log('Cannot get user rate', err)\n            throw err\n        }\n    }\n}\n\nexport function addUserMove(contact, coins) {\n    return async (dispatch, getState) => {\n        try {\n            const userMove = await userService.addMove(contact, +coins)\n            dispatch({ type: 'SET_USER', userMove })\n        } catch (err) {\n            console.log('Cannot add user move', err)\n            throw err\n        }\n    }\n}\n\nexport function signup(contactName) {\n    return async (dispatch, getState) => {\n        try {\n            const user = await userService.signup(contactName)\n            dispatch({ type: 'SET_USER', user })\n        } catch (err) {\n            console.log('Cannot sign up', err)\n            throw err\n        }\n    }\n}\n\n\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,gCAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,SAASC,QAAT,GAAoB;EACvB,OAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;IAC3B,IAAI;MACA,MAAMC,IAAI,GAAGJ,WAAW,CAACK,OAAZ,EAAb;MACAH,QAAQ,CAAC;QAAEI,IAAI,EAAE,UAAR;QAAoBF;MAApB,CAAD,CAAR;IACH,CAHD,CAGE,OAAOG,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;MACA,MAAMA,GAAN;IACH;EACJ,CARD;AASH;AAED,OAAO,SAASG,YAAT,GAAwB;EAC3B,OAAO,OAAOR,QAAP,EAAiBC,QAAjB,KAA8B;IACjC,IAAI;MACA,MAAMQ,SAAS,GAAG,MAAMX,WAAW,CAACK,OAAZ,GAAsBO,KAA9C;MACAV,QAAQ,CAAC;QAAEI,IAAI,EAAE,gBAAR;QAA0BK;MAA1B,CAAD,CAAR;IACH,CAHD,CAGE,OAAOJ,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;MACA,MAAMA,GAAN;IACH;EACJ,CARD;AASH;AAGD,OAAO,SAASM,WAAT,GAAuB;EAC1B,OAAO,OAAOX,QAAP,EAAiBC,QAAjB,KAA8B;IACjC,IAAI;MACA,MAAM;QAAEC;MAAF,IAAWD,QAAQ,GAAGW,UAA5B;MACA,MAAMC,QAAQ,GAAG,MAAMhB,cAAc,CAACiB,OAAf,CAAuBZ,IAAI,CAACa,KAA5B,CAAvB;MACAf,QAAQ,CAAC;QAAEI,IAAI,EAAE,eAAR;QAAyBS;MAAzB,CAAD,CAAR;IACH,CAJD,CAIE,OAAOR,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;MACA,MAAMA,GAAN;IACH;EACJ,CATD;AAUH;AAED,OAAO,SAASW,WAAT,CAAqBC,OAArB,EAA8BF,KAA9B,EAAqC;EACxC,OAAO,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;IACjC,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMpB,WAAW,CAACqB,OAAZ,CAAoBF,OAApB,EAA6B,CAACF,KAA9B,CAAvB;MACAf,QAAQ,CAAC;QAAEI,IAAI,EAAE,UAAR;QAAoBc;MAApB,CAAD,CAAR;IACH,CAHD,CAGE,OAAOb,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;MACA,MAAMA,GAAN;IACH;EACJ,CARD;AASH;AAED,OAAO,SAASe,MAAT,CAAgBC,WAAhB,EAA6B;EAChC,OAAO,OAAOrB,QAAP,EAAiBC,QAAjB,KAA8B;IACjC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACsB,MAAZ,CAAmBC,WAAnB,CAAnB;MACArB,QAAQ,CAAC;QAAEI,IAAI,EAAE,UAAR;QAAoBF;MAApB,CAAD,CAAR;IACH,CAHD,CAGE,OAAOG,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;MACA,MAAMA,GAAN;IACH;EACJ,CARD;AASH"},"metadata":{},"sourceType":"module"}