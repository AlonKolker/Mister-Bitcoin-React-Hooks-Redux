{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useCallback}from\"react\";import{useDispatch}from\"react-redux\";import{useNavigate,useParams}from\"react-router-dom\";import{saveContact}from\"../store/actions/contactActions\";import{useForm}from\"../customHooks/useForm\";import{contactService}from\"../services/contactService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ContactEdit=function ContactEdit(){var _useForm=useForm(),_useForm2=_slicedToArray(_useForm,3),contact=_useForm2[0],handleChange=_useForm2[1],setContact=_useForm2[2];var params=useParams();var dispatch=useDispatch();var navigate=useNavigate();var loadContact=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var contactId,contact;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:contactId=params.id;if(!contactId){_context.next=7;break;}_context.next=4;return contactService.getContactById(contactId);case 4:_context.t0=_context.sent;_context.next=8;break;case 7:_context.t0=contactService.getEmptyContact();case 8:contact=_context.t0;setContact(contact);case 10:case\"end\":return _context.stop();}}},_callee);})),[params.id,setContact]);useEffect(function(){loadContact();},[loadContact]);var onSaveContact=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(ev){var _ev$target$elements,name,phone,email;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:ev.preventDefault();_ev$target$elements=ev.target.elements,name=_ev$target$elements.name,phone=_ev$target$elements.phone,email=_ev$target$elements.email;if(!(name.value===\"\"||phone.value===\"\"||email.value===\"\")){_context2.next=4;break;}return _context2.abrupt(\"return\");case 4:dispatch(saveContact(contact));navigate(\"/contact\");case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function onSaveContact(_x){return _ref2.apply(this,arguments);};}();var onBack=function onBack(){navigate(\"/contact\");};if(!contact)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading contact edit...\"});return/*#__PURE__*/_jsx(\"section\",{className:\"contact-edit-conteiner\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-edit\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[contact._id?\"Edit\":\"Add\",\" contact\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSaveContact,className:\"edit-contact-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"edit-input\",value:contact.name,onChange:handleChange,type:\"text\",name:\"name\",id:\"name\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Phone\"}),/*#__PURE__*/_jsx(\"input\",{className:\"edit-input\",value:contact.phone,onChange:handleChange,type:\"text\",name:\"phone\",id:\"phone\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"edit-input\",value:contact.email,onChange:handleChange,type:\"text\",name:\"email\",id:\"email\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nice-button\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nice-button\",onClick:onBack,children:\"Back\"})]})]})]})});};// export class ContactEdit extends Component {\n//   state = {\n//     contact: null,\n//   }\n//   async componentDidMount() {\n//     console.log(\"edit componentDidMount\")\n//     const contactId = this.props.match.params.id\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\n//     this.setState({ contact })\n//   }\n//   handleChange = ({ target }) => {\n//     const field = target.name\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\n//     console.log(this.state.contact);\n//   }\n//   onSaveContact = async (ev) => {\n//     ev.preventDefault()\n//     // console.log(...this.state.contact );\n//     await contactService.saveContact({ ...this.state.contact })\n//     this.props.history.push(\"/contact\")\n//   }\n//   inputRefFunc = (elInput) => {\n//     elInput && elInput.focus()\n//   }\n//   render() {\n//     const { contact } = this.state\n//     console.log(contact)\n//     if (!contact) return <div>Loading contact edit...</div>\n//     return (\n//       <section className='contact-edit-conteiner'>\n//         <div className='contact-edit'>\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\n//           <label htmlFor='name'>Name</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\n//           <label htmlFor='phone'>Phone</label>\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\n//           <label htmlFor='email'>Email</label>\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\n//         <div className=\"flex\">\n//           <button className=\"nice-button\">Save</button>\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\n//         </div>\n//         </form>\n//         </div>\n//       </section>\n//     )\n//   }\n// }","map":{"version":3,"names":["useEffect","useCallback","useDispatch","useNavigate","useParams","saveContact","useForm","contactService","ContactEdit","contact","handleChange","setContact","params","dispatch","navigate","loadContact","contactId","id","getContactById","getEmptyContact","onSaveContact","ev","preventDefault","target","elements","name","phone","email","value","onBack","_id"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/pages/Contact-Edit.jsx"],"sourcesContent":["import { useEffect, useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport { saveContact } from \"../store/actions/contactActions\"\r\nimport { useForm } from \"../customHooks/useForm\"\r\nimport { contactService } from \"../services/contactService\"\r\n\r\nexport const ContactEdit = () => {\r\n  const [contact, handleChange, setContact] = useForm()\r\n  const params = useParams()\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const loadContact = useCallback(async () => {\r\n    const contactId = params.id\r\n    const contact = contactId ? await contactService.getContactById(contactId) : contactService.getEmptyContact()\r\n    setContact(contact)\r\n  }, [params.id, setContact])\r\n\r\n  useEffect(() => {\r\n    loadContact()\r\n  }, [loadContact])\r\n\r\n  const onSaveContact = async (ev) => {\r\n    ev.preventDefault()\r\n    const { name, phone, email } = ev.target.elements\r\n    if (name.value === \"\" || phone.value === \"\" || email.value === \"\") return\r\n    dispatch(saveContact(contact))\r\n    navigate(\"/contact\")\r\n  }\r\n\r\n  const onBack = () => {\r\n    navigate(\"/contact\")\r\n  }\r\n\r\n  if (!contact) return <div>Loading contact edit...</div>\r\n  return (\r\n    <section className='contact-edit-conteiner'>\r\n      <div className='contact-edit'>\r\n        <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n        <form onSubmit={onSaveContact} className='edit-contact-form'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input className='edit-input' value={contact.name} onChange={handleChange} type='text' name='name' id='name' />\r\n          <label htmlFor='phone'>Phone</label>\r\n          <input className='edit-input' value={contact.phone} onChange={handleChange} type='text' name='phone' id='phone' />\r\n          <label htmlFor='email'>Email</label>\r\n          <input className='edit-input' value={contact.email} onChange={handleChange} type='text' name='email' id='email' />\r\n          <div className='flex'>\r\n            <button className='nice-button'>Save</button>\r\n            <button className='nice-button' onClick={onBack}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\n// export class ContactEdit extends Component {\r\n//   state = {\r\n//     contact: null,\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     console.log(\"edit componentDidMount\")\r\n//     const contactId = this.props.match.params.id\r\n//     const contact = contactId ? await contactService.getContactById(contactId) :  contactService.getEmptyContact()\r\n//     this.setState({ contact })\r\n\r\n//   }\r\n\r\n//   handleChange = ({ target }) => {\r\n//     const field = target.name\r\n//     const value = target.type === \"number\" ? +target.value || \"\" : target.value\r\n//     this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\r\n//     console.log(this.state.contact);\r\n//   }\r\n\r\n//   onSaveContact = async (ev) => {\r\n//     ev.preventDefault()\r\n//     // console.log(...this.state.contact );\r\n//     await contactService.saveContact({ ...this.state.contact })\r\n//     this.props.history.push(\"/contact\")\r\n//   }\r\n\r\n//   inputRefFunc = (elInput) => {\r\n//     elInput && elInput.focus()\r\n//   }\r\n\r\n//   render() {\r\n//     const { contact } = this.state\r\n//     console.log(contact)\r\n//     if (!contact) return <div>Loading contact edit...</div>\r\n//     return (\r\n//       <section className='contact-edit-conteiner'>\r\n//         <div className='contact-edit'>\r\n//         <h1>{contact._id ? \"Edit\" : \"Add\"} contact</h1>\r\n//         <form onSubmit={this.onSaveContact} className=\"edit-contact-form\">\r\n//           <label htmlFor='name'>Name</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.name} onChange={this.handleChange} type='text' name='name' id='name' />\r\n//           <label htmlFor='phone'>Phone</label>\r\n//           <input className=\"edit-input\"  ref={this.inputRefFunc} value={contact.phone} onChange={this.handleChange} type='text' name='phone' id='phone' />\r\n//           <label htmlFor='email'>Email</label>\r\n//           <input  className=\"edit-input\" ref={this.inputRefFunc} value={contact.email} onChange={this.handleChange} type='text' name='email' id='email' />\r\n//         <div className=\"flex\">\r\n//           <button className=\"nice-button\">Save</button>\r\n//         <button className=\"nice-button\" onClick={this.props.history.goBack}>Back</button>\r\n//         </div>\r\n//         </form>\r\n//         </div>\r\n//       </section>\r\n//     )\r\n//   }\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}