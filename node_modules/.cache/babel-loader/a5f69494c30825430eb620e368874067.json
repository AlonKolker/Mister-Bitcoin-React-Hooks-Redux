{"ast":null,"code":"// import { Component } from \"react\"\n// import { userService } from \"../services/user.service\"\n// import { bitcoinService } from \"../services/bitcoin.service\"\nimport{MovesList}from\"../components/Moves-list\";import avatar from\"../assets/imgs/bitcoin-man.ipg\";// import avatar from \"../assets/imgs/avatar4.jpg\"\nimport{useHistory,useParams}from\"react-router-dom\";import{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{loadUser,getUserMoves,getUserRate}from'../store/actions/userActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Home=function Home(){var user=useSelector(function(state){return state.userModule.user;});var userMoves=useSelector(function(state){return state.userModule.userMoves;});var userRate=useSelector(function(state){return state.userModule.userRate;});var dispatch=useDispatch();var history=useHistory();useEffect(function(){dispatch(loadUser());//  if (!user) history.push(\"/signup\")\ndispatch(getUserMoves());dispatch(getUserRate());},[dispatch]);// state = {\n//   user: null,\n//   btc: null,\n//   userMoves:null,\n// }\n// componentDidMount() {\n//   this.loadUser()\n// }\n// async loadUser() {\n//   try {\n//     const user = await userService.getUser()\n//     if (!user) return this.props.history.push(\"/signup\")\n//     let threeMoves = JSON.parse(JSON.stringify(user.moves)).splice(-3)\n//     this.setState({ user, userMoves: threeMoves })\n//     this.btcFormat(user.coins)\n//   } catch (err) {\n//     console.log(\"err:\", err)\n//   }\n// }\n// async btcFormat(coins) {\n//   let btc = await bitcoinService.getRate(coins)\n//   this.setState({ btc })\n// }\nif(!user)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading\"});return/*#__PURE__*/_jsxs(\"section\",{className:\"home-page-conteiner\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"home-bitcoin-logo\",src:avatar,alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"home-header\",children:[\"Hello Dear \",user.name,\"!\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"home-user-balance\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Your Coins: \",user.coins,\" \\uD83D\\uDCB0\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Your coins in BTC: \",userRate]})]}),/*#__PURE__*/_jsx(MovesList,{contact:null,moves:userMoves,title:userMoves.length?\"Your last \".concat(userMoves.length,\" moves:\"):'Your didnt make a move yet'})]});};// export class Home extends Component {\n//   state = {\n//     user: null,\n//     btc: null,\n//     userMoves:null,\n//   }\n//   componentDidMount() {\n//     this.loadUser()\n//   }\n//   async loadUser() {\n//     try {\n//       const user = await userService.getUser()\n//       if (!user) return this.props.history.push(\"/signup\")\n//       let threeMoves = JSON.parse(JSON.stringify(user.moves)).splice(-3)\n//       this.setState({ user, userMoves: threeMoves })\n//       this.btcFormat(user.coins)\n//     } catch (err) {\n//       console.log(\"err:\", err)\n//     }\n//   }\n//   async btcFormat(coins) {\n//     let btc = await bitcoinService.getRate(coins)\n//     this.setState({ btc })\n//   }\n//   render() {\n//     const { user, btc,userMoves } = this.state\n//     if (!user) return <div>Loading</div>\n//     return (\n//       <section className='home-page-conteiner'>\n//         <div>\n//         <img className=\"home-bitcoin-logo\" src={avatar} alt=\"\" />\n//         </div>\n//         <div className=\"home-header\">Hello Dear {user.name}!</div>\n//         <div className=\"home-user-balance\">\n//         <div>Your Coins: {user.coins} ðŸ’°</div>\n//         <div>Your coins in BTC: {btc}</div>\n//         </div>\n//         <MovesList contact={null} moves={userMoves} title={userMoves.length? `Your last ${userMoves.length} moves:`:'Your didnt make a move yet'} />\n//       </section>\n//     )\n//   }\n// }","map":{"version":3,"names":["MovesList","avatar","useHistory","useParams","useEffect","useDispatch","useSelector","loadUser","getUserMoves","getUserRate","Home","user","state","userModule","userMoves","userRate","dispatch","history","name","coins","length"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/pages/Home.jsx"],"sourcesContent":["// import { Component } from \"react\"\r\n// import { userService } from \"../services/user.service\"\r\n// import { bitcoinService } from \"../services/bitcoin.service\"\r\nimport { MovesList } from \"../components/Moves-list\"\r\nimport avatar from \"../assets/imgs/bitcoin-man.ipg\"\r\n// import avatar from \"../assets/imgs/avatar4.jpg\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\n\r\n\r\n\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadUser, getUserMoves, getUserRate } from '../store/actions/userActions'\r\n\r\n\r\n\r\nexport const Home =()=> {\r\n  \r\n  \r\n  const user = useSelector((state) => state.userModule.user)\r\n  const userMoves = useSelector((state) => state.userModule.userMoves)\r\n  const userRate = useSelector((state) => state.userModule.userRate)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUser())\r\n        //  if (!user) history.push(\"/signup\")\r\n    dispatch(getUserMoves())\r\n    dispatch(getUserRate())\r\n  }, [dispatch])\r\n\r\n\r\n  // state = {\r\n  //   user: null,\r\n  //   btc: null,\r\n  //   userMoves:null,\r\n  // }\r\n  // componentDidMount() {\r\n  //   this.loadUser()\r\n  // }\r\n  // async loadUser() {\r\n  //   try {\r\n  //     const user = await userService.getUser()\r\n  //     if (!user) return this.props.history.push(\"/signup\")\r\n  //     let threeMoves = JSON.parse(JSON.stringify(user.moves)).splice(-3)\r\n  //     this.setState({ user, userMoves: threeMoves })\r\n  //     this.btcFormat(user.coins)\r\n  //   } catch (err) {\r\n  //     console.log(\"err:\", err)\r\n  //   }\r\n  // }\r\n  // async btcFormat(coins) {\r\n  //   let btc = await bitcoinService.getRate(coins)\r\n  //   this.setState({ btc })\r\n  // }\r\n    if (!user) return <div>Loading</div>\r\n    return (\r\n      <section className='home-page-conteiner'>\r\n        \r\n        <div>\r\n        <img className=\"home-bitcoin-logo\" src={avatar} alt=\"\" />\r\n        </div>\r\n        <div className=\"home-header\">Hello Dear {user.name}!</div>\r\n        <div className=\"home-user-balance\">\r\n        <div>Your Coins: {user.coins} ðŸ’°</div>\r\n        <div>Your coins in BTC: {userRate}</div>\r\n        </div>\r\n        <MovesList contact={null} moves={userMoves} title={userMoves.length? `Your last ${userMoves.length} moves:`:'Your didnt make a move yet'} />\r\n      </section>\r\n    )\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export class Home extends Component {\r\n//   state = {\r\n//     user: null,\r\n//     btc: null,\r\n//     userMoves:null,\r\n//   }\r\n//   componentDidMount() {\r\n//     this.loadUser()\r\n//   }\r\n//   async loadUser() {\r\n//     try {\r\n//       const user = await userService.getUser()\r\n//       if (!user) return this.props.history.push(\"/signup\")\r\n//       let threeMoves = JSON.parse(JSON.stringify(user.moves)).splice(-3)\r\n//       this.setState({ user, userMoves: threeMoves })\r\n//       this.btcFormat(user.coins)\r\n//     } catch (err) {\r\n//       console.log(\"err:\", err)\r\n//     }\r\n//   }\r\n//   async btcFormat(coins) {\r\n//     let btc = await bitcoinService.getRate(coins)\r\n//     this.setState({ btc })\r\n//   }\r\n//   render() {\r\n//     const { user, btc,userMoves } = this.state\r\n//     if (!user) return <div>Loading</div>\r\n//     return (\r\n//       <section className='home-page-conteiner'>\r\n        \r\n//         <div>\r\n//         <img className=\"home-bitcoin-logo\" src={avatar} alt=\"\" />\r\n//         </div>\r\n//         <div className=\"home-header\">Hello Dear {user.name}!</div>\r\n//         <div className=\"home-user-balance\">\r\n//         <div>Your Coins: {user.coins} ðŸ’°</div>\r\n//         <div>Your coins in BTC: {btc}</div>\r\n//         </div>\r\n//         <MovesList contact={null} moves={userMoves} title={userMoves.length? `Your last ${userMoves.length} moves:`:'Your didnt make a move yet'} />\r\n//       </section>\r\n//     )\r\n//   }\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAASA,SAAT,KAA0B,0BAA1B,CACA,MAAOC,OAAP,KAAmB,gCAAnB,CACA;AACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,kBAAtC,CAIA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,QAAT,CAAmBC,YAAnB,CAAiCC,WAAjC,KAAoD,8BAApD,C,wFAIA,MAAO,IAAMC,KAAI,CAAE,QAANA,KAAM,EAAK,CAGtB,GAAMC,KAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,MAAK,CAACC,UAAN,CAAiBF,IAA5B,EAAD,CAAxB,CACA,GAAMG,UAAS,CAAGR,WAAW,CAAC,SAACM,KAAD,QAAWA,MAAK,CAACC,UAAN,CAAiBC,SAA5B,EAAD,CAA7B,CACA,GAAMC,SAAQ,CAAGT,WAAW,CAAC,SAACM,KAAD,QAAWA,MAAK,CAACC,UAAN,CAAiBE,QAA5B,EAAD,CAA5B,CACA,GAAMC,SAAQ,CAAGX,WAAW,EAA5B,CACA,GAAMY,QAAO,CAAGf,UAAU,EAA1B,CAEAE,SAAS,CAAC,UAAM,CACdY,QAAQ,CAACT,QAAQ,EAAT,CAAR,CACI;AACJS,QAAQ,CAACR,YAAY,EAAb,CAAR,CACAQ,QAAQ,CAACP,WAAW,EAAZ,CAAR,CACD,CALQ,CAKN,CAACO,QAAD,CALM,CAAT,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,GAAI,CAACL,IAAL,CAAW,mBAAO,gCAAP,CACX,mBACE,iBAAS,SAAS,CAAC,qBAAnB,wBAEE,kCACA,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEV,MAAxC,CAAgD,GAAG,CAAC,EAApD,EADA,EAFF,cAKE,aAAK,SAAS,CAAC,aAAf,yBAAyCU,IAAI,CAACO,IAA9C,OALF,cAME,aAAK,SAAS,CAAC,mBAAf,wBACA,sCAAkBP,IAAI,CAACQ,KAAvB,mBADA,cAEA,6CAAyBJ,QAAzB,GAFA,GANF,cAUE,KAAC,SAAD,EAAW,OAAO,CAAE,IAApB,CAA0B,KAAK,CAAED,SAAjC,CAA4C,KAAK,CAAEA,SAAS,CAACM,MAAV,qBAA+BN,SAAS,CAACM,MAAzC,YAAyD,4BAA5G,EAVF,GADF,CAeH,CAxDM,CAiEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}