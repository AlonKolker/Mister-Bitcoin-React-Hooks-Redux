{"ast":null,"code":"export const contactService = {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n};\nconst contacts = [{\n  _id: \"5a56640269f443a5d64b32ca\",\n  name: \"Ochoa Hyde\",\n  email: \"ochoahyde@renovize.com\",\n  phone: \"+1 (968) 593-3824\"\n}, {\n  _id: \"5a5664025f6ae9aa24a99fde\",\n  name: \"Hallie Mclean\",\n  email: \"halliemclean@renovize.com\",\n  phone: \"+1 (948) 464-2888\"\n}, {\n  _id: \"5a56640252d6acddd183d319\",\n  name: \"Parsons Norris\",\n  email: \"parsonsnorris@renovize.com\",\n  phone: \"+1 (958) 502-3495\"\n}, {\n  _id: \"5a566402ed1cf349f0b47b4d\",\n  name: \"Rachel Lowe\",\n  email: \"rachellowe@renovize.com\",\n  phone: \"+1 (911) 475-2312\"\n}, {\n  _id: \"5a566402abce24c6bfe4699d\",\n  name: \"Dominique Soto\",\n  email: \"dominiquesoto@renovize.com\",\n  phone: \"+1 (807) 551-3258\"\n}, {\n  _id: \"5a566402a6499c1d4da9220a\",\n  name: \"Shana Pope\",\n  email: \"shanapope@renovize.com\",\n  phone: \"+1 (970) 527-3082\"\n}, {\n  _id: \"5a566402f90ae30e97f990db\",\n  name: \"Faulkner Flores\",\n  email: \"faulknerflores@renovize.com\",\n  phone: \"+1 (952) 501-2678\"\n}, {\n  _id: \"5a5664027bae84ef280ffbdf\",\n  name: \"Holder Bean\",\n  email: \"holderbean@renovize.com\",\n  phone: \"+1 (989) 503-2663\"\n}, {\n  _id: \"5a566402e3b846c5f6aec652\",\n  name: \"Rosanne Shelton\",\n  email: \"rosanneshelton@renovize.com\",\n  phone: \"+1 (968) 454-3851\"\n}, {\n  _id: \"5a56640272c7dcdf59c3d411\",\n  name: \"Pamela Nolan\",\n  email: \"pamelanolan@renovize.com\",\n  phone: \"+1 (986) 545-2166\"\n}, {\n  _id: \"5a5664029a8dd82a6178b15f\",\n  name: \"Roy Cantu\",\n  email: \"roycantu@renovize.com\",\n  phone: \"+1 (929) 571-2295\"\n}, {\n  _id: \"5a5664028c096d08eeb13a8a\",\n  name: \"Ollie Christian\",\n  email: \"olliechristian@renovize.com\",\n  phone: \"+1 (977) 419-3550\"\n}, {\n  _id: \"5a5664026c53582bb9ebe9d1\",\n  name: \"Nguyen Walls\",\n  email: \"nguyenwalls@renovize.com\",\n  phone: \"+1 (963) 471-3181\"\n}, {\n  _id: \"5a56640298ab77236845b82b\",\n  name: \"Glenna Santana\",\n  email: \"glennasantana@renovize.com\",\n  phone: \"+1 (860) 467-2376\"\n}, {\n  _id: \"5a56640208fba3e8ecb97305\",\n  name: \"Malone Clark\",\n  email: \"maloneclark@renovize.com\",\n  phone: \"+1 (818) 565-2557\"\n}, {\n  _id: \"5a566402abb3146207bc4ec5\",\n  name: \"Floyd Rutledge\",\n  email: \"floydrutledge@renovize.com\",\n  phone: \"+1 (807) 597-3629\"\n}, {\n  _id: \"5a56640298500fead8cb1ee5\",\n  name: \"Grace James\",\n  email: \"gracejames@renovize.com\",\n  phone: \"+1 (959) 525-2529\"\n}, {\n  _id: \"5a56640243427b8f8445231e\",\n  name: \"Tanner Gates\",\n  email: \"tannergates@renovize.com\",\n  phone: \"+1 (978) 591-2291\"\n}, {\n  _id: \"5a5664025c3abdad6f5e098c\",\n  name: \"Lilly Conner\",\n  email: \"lillyconner@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}, {\n  _id: \"5a5c3abdad6f5e098c\",\n  name: \"Yuval Shnokler\",\n  email: \"YuvalShnokler@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}, {\n  _id: \"5a5c4548926396+523abdad6f5e098c\",\n  name: \"Guy Kol\",\n  email: \"GuyKol@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}, {\n  _id: \"5a536592695d5f098c\",\n  name: \"Denis Lit\",\n  email: \"DenisLit@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}, {\n  _id: \"5a536254d87f894vf592695d5f098c\",\n  name: \"Alen Pol\",\n  email: \"AlenPol@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}, {\n  _id: \"5a53dasd695626dff098c\",\n  name: \"Tamir Fishel\",\n  email: \"TamirFishel@renovize.com\",\n  phone: \"+1 (842) 587-3812\"\n}];\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  });\n}\n\nfunction getContacts() {\n  let filterBy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n\n    if (filterBy && filterBy.name) {\n      contactsToReturn = contactsToReturn.filter(contact => contact.name.toLowerCase().includes(filterBy.name.toLowerCase()));\n    }\n\n    if (filterBy && filterBy.phone) {\n      contactsToReturn = contactsToReturn.filter(contact => contact.phone.includes(filterBy.phone.toString()));\n    }\n\n    resolve(sort(contactsToReturn));\n  });\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id);\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`);\n  });\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id);\n\n    if (index !== -1) {\n      contacts.splice(index, 1);\n    }\n\n    resolve(contacts);\n  });\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id);\n\n    if (index !== -1) {\n      contacts[index] = contact;\n    }\n\n    resolve(contact);\n  });\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId();\n    contacts.push(contact);\n    resolve(contact);\n  });\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact);\n}\n\nfunction getEmptyContact() {\n  return {\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  };\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase();\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) || contact.phone.toLocaleLowerCase().includes(term) || contact.email.toLocaleLowerCase().includes(term);\n  });\n}\n\nfunction _makeId() {\n  let length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var txt = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return txt;\n}","map":{"version":3,"names":["contactService","getContacts","getContactById","deleteContact","saveContact","getEmptyContact","contacts","_id","name","email","phone","sort","arr","a","b","toLocaleLowerCase","filterBy","Promise","resolve","reject","contactsToReturn","filter","contact","toLowerCase","includes","toString","id","find","index","findIndex","splice","_updateContact","c","_addContact","_makeId","push","term","length","txt","possible","i","charAt","Math","floor","random"],"sources":["C:/Users/ALON/Desktop/Mister-bitcoin -React day 106/Mister Bitcoin-React-with-hooks-and-redux/src/services/contactService.js"],"sourcesContent":["export const contactService = {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact,\n}\n\nconst contacts = [\n  {\n    _id: \"5a56640269f443a5d64b32ca\",\n    name: \"Ochoa Hyde\",\n    email: \"ochoahyde@renovize.com\",\n    phone: \"+1 (968) 593-3824\",\n  },\n  {\n    _id: \"5a5664025f6ae9aa24a99fde\",\n    name: \"Hallie Mclean\",\n    email: \"halliemclean@renovize.com\",\n    phone: \"+1 (948) 464-2888\",\n  },\n  {\n    _id: \"5a56640252d6acddd183d319\",\n    name: \"Parsons Norris\",\n    email: \"parsonsnorris@renovize.com\",\n    phone: \"+1 (958) 502-3495\",\n  },\n  {\n    _id: \"5a566402ed1cf349f0b47b4d\",\n    name: \"Rachel Lowe\",\n    email: \"rachellowe@renovize.com\",\n    phone: \"+1 (911) 475-2312\",\n  },\n  {\n    _id: \"5a566402abce24c6bfe4699d\",\n    name: \"Dominique Soto\",\n    email: \"dominiquesoto@renovize.com\",\n    phone: \"+1 (807) 551-3258\",\n  },\n  {\n    _id: \"5a566402a6499c1d4da9220a\",\n    name: \"Shana Pope\",\n    email: \"shanapope@renovize.com\",\n    phone: \"+1 (970) 527-3082\",\n  },\n  {\n    _id: \"5a566402f90ae30e97f990db\",\n    name: \"Faulkner Flores\",\n    email: \"faulknerflores@renovize.com\",\n    phone: \"+1 (952) 501-2678\",\n  },\n  {\n    _id: \"5a5664027bae84ef280ffbdf\",\n    name: \"Holder Bean\",\n    email: \"holderbean@renovize.com\",\n    phone: \"+1 (989) 503-2663\",\n  },\n  {\n    _id: \"5a566402e3b846c5f6aec652\",\n    name: \"Rosanne Shelton\",\n    email: \"rosanneshelton@renovize.com\",\n    phone: \"+1 (968) 454-3851\",\n  },\n  {\n    _id: \"5a56640272c7dcdf59c3d411\",\n    name: \"Pamela Nolan\",\n    email: \"pamelanolan@renovize.com\",\n    phone: \"+1 (986) 545-2166\",\n  },\n  {\n    _id: \"5a5664029a8dd82a6178b15f\",\n    name: \"Roy Cantu\",\n    email: \"roycantu@renovize.com\",\n    phone: \"+1 (929) 571-2295\",\n  },\n  {\n    _id: \"5a5664028c096d08eeb13a8a\",\n    name: \"Ollie Christian\",\n    email: \"olliechristian@renovize.com\",\n    phone: \"+1 (977) 419-3550\",\n  },\n  {\n    _id: \"5a5664026c53582bb9ebe9d1\",\n    name: \"Nguyen Walls\",\n    email: \"nguyenwalls@renovize.com\",\n    phone: \"+1 (963) 471-3181\",\n  },\n  {\n    _id: \"5a56640298ab77236845b82b\",\n\n    name: \"Glenna Santana\",\n    email: \"glennasantana@renovize.com\",\n    phone: \"+1 (860) 467-2376\",\n  },\n  {\n    _id: \"5a56640208fba3e8ecb97305\",\n    name: \"Malone Clark\",\n    email: \"maloneclark@renovize.com\",\n    phone: \"+1 (818) 565-2557\",\n  },\n  {\n    _id: \"5a566402abb3146207bc4ec5\",\n    name: \"Floyd Rutledge\",\n    email: \"floydrutledge@renovize.com\",\n    phone: \"+1 (807) 597-3629\",\n  },\n  {\n    _id: \"5a56640298500fead8cb1ee5\",\n    name: \"Grace James\",\n    email: \"gracejames@renovize.com\",\n    phone: \"+1 (959) 525-2529\",\n  },\n  {\n    _id: \"5a56640243427b8f8445231e\",\n    name: \"Tanner Gates\",\n    email: \"tannergates@renovize.com\",\n    phone: \"+1 (978) 591-2291\",\n  },\n  {\n    _id: \"5a5664025c3abdad6f5e098c\",\n    name: \"Lilly Conner\",\n    email: \"lillyconner@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n  {\n    _id: \"5a5c3abdad6f5e098c\",\n    name: \"Yuval Shnokler\",\n    email: \"YuvalShnokler@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n  {\n    _id: \"5a5c4548926396+523abdad6f5e098c\",\n    name: \"Guy Kol\",\n    email: \"GuyKol@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n  {\n    _id: \"5a536592695d5f098c\",\n    name: \"Denis Lit\",\n    email: \"DenisLit@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n  {\n    _id: \"5a536254d87f894vf592695d5f098c\",\n    name: \"Alen Pol\",\n    email: \"AlenPol@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n  {\n    _id: \"5a53dasd695626dff098c\",\n    name: \"Tamir Fishel\",\n    email: \"TamirFishel@renovize.com\",\n    phone: \"+1 (842) 587-3812\",\n  },\n]\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1\n    }\n\n    return 0\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts\n    if (filterBy && filterBy.name) {\n      contactsToReturn = contactsToReturn.filter((contact) => contact.name.toLowerCase().includes(filterBy.name.toLowerCase()))\n    }\n    if (filterBy && filterBy.phone) {\n      contactsToReturn = contactsToReturn.filter((contact) => contact.phone.includes(filterBy.phone.toString()))\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find((contact) => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex((contact) => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex((c) => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter((contact) => {\n    return (\n      contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n    )\n  })\n}\n\nfunction _makeId(length = 10) {\n  var txt = \"\"\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}